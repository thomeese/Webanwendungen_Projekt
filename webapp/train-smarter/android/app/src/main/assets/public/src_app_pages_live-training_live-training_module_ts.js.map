{"version":3,"file":"src_app_pages_live-training_live-training_module_ts.js","mappings":"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","sources":["./src/app/pages/live-training/live-training-routing.module.ts","./src/app/pages/live-training/live-training.module.ts","./src/app/pages/live-training/live-training.page.ts","./src/app/services/database.service.ts","./src/app/services/localstorage.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LiveTrainingPage } from './live-training.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LiveTrainingPage\r\n  },\r\n  {\r\n    path: 'live-training-logging',\r\n    loadChildren: () => import('./live-training-logging/live-training-logging.module').then( m => m.LiveTrainingLoggingPageModule)\r\n  }\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LiveTrainingPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LiveTrainingPageRoutingModule } from './live-training-routing.module';\n\nimport { LiveTrainingPage } from './live-training.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LiveTrainingPageRoutingModule\n  ],\n  declarations: [LiveTrainingPage]\n})\nexport class LiveTrainingPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {LoadingController} from '@ionic/angular';\nimport {DatabaseService} from '../../services/database.service';\nimport {NavigationExtras, Router} from '@angular/router';\nimport {LocalstorageService} from '../../services/localstorage.service';\n\n@Component({\n  selector: 'app-live-training',\n  templateUrl: './live-training.page.html',\n  styleUrls: ['./live-training.page.scss'],\n})\nexport class LiveTrainingPage implements OnInit {\n\n  trainingPlanList;\n  trainingPlanId;\n  trainingPlan;\n  exercises;\n\n  constructor(private loadingCtr: LoadingController,\n              private dataService: DatabaseService,\n              private router: Router,\n              private localStorageCtrl: LocalstorageService) {\n  }\n\n  ngOnInit() {\n    this.trainingPlanId = this.localStorageCtrl.getData('live-training-trainingPlanId');\n    if(this.trainingPlanId){\n      //this.exercises = JSON.parse(this.localStorageCtrl.getData('live-training-trainingPlanId'));\n      console.log(this.exercises);\n      if(!this.exercises) {\n        this.getExercises();\n      }\n    } else {\n      this.getTrainingPlans();\n    }\n  }\n\n  async getExercises() {\n    const loading = await this.loadingCtr.create({\n      message: 'Loading..',\n      spinner: 'bubbles',\n    });\n    await loading.present();\n    this.dataService.getTrainingsPlanById(this.trainingPlanId).subscribe(res => {\n      this.trainingPlan = res;\n      this.exercises = res.exercises;\n      console.log(this.trainingPlan);\n      this.localStorageCtrl.saveData('live-training-exercises', JSON.stringify(this.exercises));\n    });\n    await loading.dismiss();\n  }\n\n  async getTrainingPlans() {\n    const loading = await this.loadingCtr.create({\n      message: 'Loading..',\n      spinner: 'bubbles',\n    });\n    await loading.present();\n    this.dataService.getUserTrainingsPlan().subscribe(res => {\n      this.trainingPlanList = res;\n    });\n    await loading.dismiss();\n  }\n\n  startLiveTraining(trainingPlanId) {\n    this.trainingPlanId = trainingPlanId;\n    this.localStorageCtrl.saveData('live-training-trainingPlanId', trainingPlanId);\n    this.getExercises();\n  }\n}\n","import {Injectable, Query} from '@angular/core';\nimport {\n  addDoc,\n  collection,\n  collectionData,\n  deleteDoc,\n  doc,\n  docData,\n  Firestore,\n  updateDoc,\n  where,\n  query, collectionGroup\n} from '@angular/fire/firestore';\nimport {Observable} from 'rxjs';\nimport {traceUntilFirst} from '@angular/fire/performance';\nimport {AuthenticationService} from './authentication.service';\n\nenum SearchTypes {\n  exercise = '/exercise',\n  exercisesList = '',\n  bodyPart = '/bodyPart',\n  bodyPartList = '/bodyPartList',\n  exerciseByID = '/exercise',\n  targetMuscle = '/target',\n  targetMuscleList = '/targetList',\n  equipment = '/equipment',\n  equipmentList = '/equipmentList'\n}\n\nexport interface UserData {\n  docId?: string;\n  uid: string;\n  firstname: string;\n  surname: string;\n  birthdate: string;\n  size: number;\n  email: string;\n}\n\nexport interface Excersise {\n  exerciseId?: string;\n  name: string;\n  bodypart: string;\n  equipment: string;\n  gifUrl: string;\n  target: string;\n}\n\nexport interface SetLogging {\n  id?: string;\n  excercizeId: string;\n  trainingPlanId: string;\n  userId: string;\n  date: string;\n  set: number;\n  weight: number;\n  repition: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DatabaseService {\n\n  constructor(private firestore: Firestore,\n              private authService: AuthenticationService) {\n  }\n\n  getUserData(): Observable<UserData[]> {\n    const userRef = collection(this.firestore, 'userData');\n    return collectionData(userRef, {idField: 'userId'}) as Observable<UserData []>;\n  }\n\n  getUserDataById(id: string): Observable<UserData> {\n    const userDocRef = doc(this.firestore, `userData/${id}`);\n    return docData(userDocRef, {idField: 'userId'}) as Observable<UserData>;\n  }\n\n  addUser(user: UserData) {\n    const userRef = collection(this.firestore, 'userData');\n    return addDoc(userRef, user);\n  }\n\n  updateUser(user: UserData) {\n    const userDocRef = doc(this.firestore, `userData/${user.docId}`);\n    return updateDoc(userDocRef, {\n      firstname: user.firstname, surname: user.surname,\n      birthdate: user.birthdate, size: user.size, email: user.email\n    });\n  }\n\n  deleteUser(user: UserData) {\n    const userDocRef = doc(this.firestore, `userData/${user.docId}`);\n    return deleteDoc(userDocRef);\n  }\n\n  addTrainingPlan(plan: any) {\n    const trainingPlanRef = collection(this.firestore, 'trainingPlan');\n    return addDoc(trainingPlanRef, plan);\n  }\n\n  updateTrainingPlan(plan: any) {\n    const trainingPlanDocRef = doc(this.firestore, `trainingPlan/${plan.id}`);\n    return updateDoc(trainingPlanDocRef, plan);\n  }\n\n  deleteTrainingPlan(plan: any) {\n    const trainingPlanDocRef = doc(this.firestore, `trainingPlan/${plan.id}`);\n    return deleteDoc(trainingPlanDocRef);\n  }\n\n  getTrainingsPlan(): Observable<any[]> {\n    const trainingPlanRef = collection(this.firestore, 'trainingPlan');\n    return collectionData(trainingPlanRef, {idField: 'trainingPlanId'}) as Observable<any []>;\n  }\n\n  getTrainingsPlanById(id: string): Observable<any> {\n    const trainingPlanRef = doc(this.firestore, `trainingPlan/${id}`);\n    return docData(trainingPlanRef, {idField: 'trainingPlanId'}) as Observable<any>;\n  }\n\n  getUserTrainingsPlan() {\n    const trainingPlanRef = collection(this.firestore, 'trainingPlan');\n    const trainQuery = query(trainingPlanRef, where('uid', '==', this.authService.getUserId()));\n    return collectionData(trainQuery, {idField: 'trainingPlanId'});\n  }\n\n  addExercise(exercise: Excersise) {\n    const exerciseRef = collection(this.firestore, 'exercises');\n    return addDoc(exerciseRef, exercise);\n  }\n\n  getAllExercises(): Observable<Excersise[]> {\n    const exerciseRef = collection(this.firestore, 'exercises');\n    return collectionData(exerciseRef, {idField: 'exerciseId'}) as Observable<Excersise[]>;\n  }\n\n  getExercisesBySearch(type, target?): Observable<Excersise[]> {\n    console.log('Hello');\n    console.log(type);\n    console.log(SearchTypes.bodyPart);\n    const exerciseRef = collection(this.firestore, 'exercises');\n    if (type === 'exercisesList') {\n      console.log(SearchTypes.exercisesList);\n      return this.getAllExercises();\n    }\n    if (type === 'bodyPart') {\n      console.log('bodypart');\n      const exerciseQuary = query(exerciseRef, where('bodypart', '==', target));\n      return collectionData(exerciseQuary, {idField: 'exerciseId'}) as Observable<Excersise []>;\n    }\n    if (type === 'targetMuscle') {\n      console.log(SearchTypes.targetMuscle);\n      const exerciseQuary = query(exerciseRef, where('target', '==', target));\n      return collectionData(exerciseQuary, {idField: 'exerciseId'}) as Observable<Excersise []>;\n    }\n    if (type === 'equipment') {\n      console.log(SearchTypes.equipment);\n      const exerciseQuary = query(exerciseRef, where('equipment', '==', target));\n      return collectionData(exerciseQuary, {idField: 'exerciseId'}) as Observable<Excersise []>;\n    }\n  }\n\n  getExerciseById(id: string): Observable<Excersise> {\n    const exerciseRef = doc(this.firestore, `exercises/${id}`);\n    return docData(exerciseRef, {idField: 'exerciseId'}) as Observable<Excersise>;\n  }\n\n  getExerciseByNumericId(id: string) {\n    const exerciseRef = collection(this.firestore, 'exercises');\n    const exerciseQuary = query(exerciseRef, where('numericId', '==', id));\n    return collectionData(exerciseQuary, {idField: 'exerciseId'}) as Observable<Excersise []>;\n  }\n\n  updateExercise(exercise: Excersise) {\n    const exerciseDocRef = doc(this.firestore, `exercises/${exercise.exerciseId}`);\n    return updateDoc(exerciseDocRef, {\n      name: exercise.name, bodypart: exercise.bodypart,\n      equipment: exercise.equipment, gifUrl: exercise.gifUrl, target: exercise.target\n    });\n  }\n\n  deleteExercise(exercise: Excersise) {\n    const exerciseDocRef = doc(this.firestore, `exercises/${exercise.exerciseId}`);\n    return deleteDoc(exerciseDocRef);\n  }\n\n  addSetLogging(setLogging: SetLogging) {\n    const setLoggingRef = collection(this.firestore, 'setLogging');\n    return addDoc(setLoggingRef, setLogging);\n  }\n\n  updateSetLogging(setLogging: SetLogging) {\n    const setLoggingDocRef = doc(this.firestore, `setLogging/${setLogging.id}`);\n    return updateDoc(setLoggingDocRef, {\n      exerciseId: setLogging.excercizeId, trainingPlanId: setLogging.trainingPlanId,\n      userId: setLogging.userId, date: setLogging.date, set: setLogging.set,\n      weight: setLogging.weight, repetiton: setLogging.repition\n    });\n  }\n\n  deleteSetLogging(setLogging: SetLogging) {\n    const setLoggingDocRef = doc(this.firestore, `setLogging/${setLogging.id}`);\n    return deleteDoc(setLoggingDocRef);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalstorageService {\n\n  constructor() { }\n\n  saveData(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n\n  getData(key: string) {\n    return localStorage.getItem(key);\n  }\n  removeData(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  clearData() {\n    localStorage.clear();\n  }\n}\n"],"names":["Component","LoadingController","DatabaseService","Router","LocalstorageService","LiveTrainingPage","constructor","loadingCtr","dataService","router","localStorageCtrl","ngOnInit","trainingPlanId","getData","console","log","exercises","getExercises","getTrainingPlans","loading","create","message","spinner","present","getTrainingsPlanById","subscribe","res","trainingPlan","saveData","JSON","stringify","dismiss","getUserTrainingsPlan","trainingPlanList","startLiveTraining","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}