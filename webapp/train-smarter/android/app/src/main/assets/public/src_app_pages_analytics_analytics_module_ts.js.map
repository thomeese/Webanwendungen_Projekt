{"version":3,"file":"src_app_pages_analytics_analytics_module_ts.js","mappings":"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","sources":["./src/app/pages/analytics/analytics-routing.module.ts","./src/app/pages/analytics/analytics.module.ts","./src/app/pages/analytics/analytics.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AnalyticsPage } from './analytics.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AnalyticsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AnalyticsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AnalyticsPageRoutingModule } from './analytics-routing.module';\r\n\r\nimport { AnalyticsPage } from './analytics.page';\r\nimport {SwiperModule} from \"swiper/angular\";\r\nimport {ExercisePageModule} from \"../exercise/exercise.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AnalyticsPageRoutingModule,\r\n    SwiperModule,\r\n    ExercisePageModule\r\n  ],\r\n  declarations: [AnalyticsPage]\r\n})\r\nexport class AnalyticsPageModule {}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {DatabaseService} from '../../services/database.service';\r\nimport {Router} from '@angular/router';\r\nimport {SwiperOptions} from \"swiper\";\r\n\r\n@Component({\r\n  selector: 'app-analytics',\r\n  templateUrl: './analytics.page.html',\r\n  styleUrls: ['./analytics.page.scss'],\r\n})\r\nexport class AnalyticsPage implements OnInit {\r\n  mostUsedPlan;\r\n  leastUsedPlan;\r\n  exerciseWeightRecordMap;\r\n  exerciseLookupMap;\r\n  config: SwiperOptions = {\r\n    slidesPerView: 'auto',\r\n    spaceBetween: 10,\r\n    centeredSlides: true,\r\n    pagination: {\r\n      dynamicBullets: true,\r\n      clickable: true\r\n    },\r\n    coverflowEffect: {\r\n      rotate: 30,\r\n      stretch: 0,\r\n      depth: 100,\r\n      modifier: 1,\r\n      slideShadows: false\r\n    },\r\n    effect: 'coverflow',\r\n    //navigation: true,\r\n  };\r\n  constructor(private dataService: DatabaseService,\r\n              private router: Router) {\r\n  }\r\n\r\n  getExercisePersonalRecord() {\r\n    const map = new Map ();\r\n    let setArray = [];\r\n    this.dataService.getAllSetLoggingByUid().subscribe( result => {\r\n      //Alle Gewichte fuer die jeweilige Exercise finden\r\n      result.forEach( item => {\r\n        item.sets.forEach( concreteSet =>{\r\n          setArray.push(concreteSet.weight);\r\n        });\r\n        if(map.get(item.excerciseId)) {\r\n          for (const i of map.get(item.excerciseId)) {\r\n            setArray.push(i);\r\n          }\r\n        }\r\n        //und zwischenspeichern\r\n        map.set(item.excerciseId,setArray);\r\n        setArray = [];\r\n      });\r\n      const secondMap = new Map ();\r\n      //Maximalgewicht fuer die jeweilige Exercise finden\r\n      for( const k of map.keys()){\r\n        if(map.get(k)) {\r\n          //und zwischen speichern\r\n          secondMap.set(k, Math.max(...map.get(k)));\r\n        }\r\n      }\r\n      this.exerciseWeightRecordMap = secondMap;\r\n      this.exerciseLookupMap = new Map();\r\n      for(const j of secondMap.keys()){\r\n        if(secondMap.get(j)){\r\n          //genaue Exercise-Daten holen und mit Maximalgewicht speichern\r\n          this.dataService.getExerciseByNumericId(j).subscribe(resultExercise => {\r\n            this.exerciseLookupMap.set(j,resultExercise[0]);\r\n            console.log(this.exerciseLookupMap);\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getMostUsedTrainingsPlan() {\r\n    const map = new Map();\r\n    this.dataService.getUserTrainingsPlan().subscribe(result => {\r\n      result.forEach(resultItem => {\r\n        //Map mit ids und Nullen vorinitialisieren\r\n        map.set(resultItem.trainingPlanId, 0);\r\n      });\r\n      this.dataService.getAllSetLoggingByUid().subscribe(res => {\r\n        res.forEach(resItem => {\r\n          //Jede gefundene Id hochzaehlen\r\n          map.set(resItem.trainingPlanId, map.get(resItem.trainingPlanId) + 1);\r\n        });\r\n        //Max-Wert in der Map ermitteln\r\n        const maxValue = Math.max(...map.values());\r\n        for (const keyItem of map.keys()) {\r\n          if (map.get(keyItem) === maxValue) {\r\n            //Plan der dem Max-Wert in der Map hat setzen\r\n            this.dataService.getTrainingsPlanById(keyItem).subscribe(resultItem => {\r\n              this.mostUsedPlan = resultItem;\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  getLeastUsedTrainingsPlan() {\r\n    const map = new Map();\r\n    this.dataService.getUserTrainingsPlan().subscribe(result => {\r\n      result.forEach(resultItem => {\r\n        //Map mit ids und Nullen vorinitialisieren\r\n        map.set(resultItem.trainingPlanId, 0);\r\n      });\r\n      this.dataService.getAllSetLoggingByUid().subscribe(res => {\r\n        res.forEach(resItem => {\r\n          //Jede gefundene Id hochzaehlen\r\n          map.set(resItem.trainingPlanId, map.get(resItem.trainingPlanId) + 1);\r\n        });\r\n        //Min-Wert in der Map ermitteln\r\n        const minValue = Math.min(...map.values());\r\n        for (const keyItem of map.keys()) {\r\n          if (map.get(keyItem) === minValue) {\r\n            //Plan der dem Min-Wert in der Map hat setzen\r\n            this.dataService.getTrainingsPlanById(keyItem).subscribe(resultItem => {\r\n              this.leastUsedPlan = resultItem;\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMostUsedTrainingsPlan();\r\n    this.getLeastUsedTrainingsPlan();\r\n    this.getExercisePersonalRecord();\r\n  }\r\n\r\n  async redirect(trainingPlanId: string) {\r\n    await this.router.navigateByUrl(`/training-plan/${trainingPlanId}`, {replaceUrl: true});\r\n  }\r\n}\r\n"],"names":["Component","DatabaseService","Router","AnalyticsPage","constructor","dataService","router","slidesPerView","spaceBetween","centeredSlides","pagination","dynamicBullets","clickable","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","effect","getExercisePersonalRecord","map","Map","setArray","getAllSetLoggingByUid","subscribe","result","forEach","item","sets","concreteSet","push","weight","get","excerciseId","i","set","secondMap","k","keys","Math","max","exerciseWeightRecordMap","exerciseLookupMap","j","getExerciseByNumericId","resultExercise","console","log","getMostUsedTrainingsPlan","getUserTrainingsPlan","resultItem","trainingPlanId","res","resItem","maxValue","values","keyItem","getTrainingsPlanById","mostUsedPlan","getLeastUsedTrainingsPlan","minValue","min","leastUsedPlan","ngOnInit","redirect","navigateByUrl","replaceUrl","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}