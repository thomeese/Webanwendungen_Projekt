{"version":3,"file":"src_app_pages_analytics_analytics_module_ts.js","mappings":"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","sources":["./src/app/pages/analytics/analytics-routing.module.ts","./src/app/pages/analytics/analytics.module.ts","./src/app/pages/analytics/analytics.page.ts","./src/app/services/database.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AnalyticsPage } from './analytics.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AnalyticsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AnalyticsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AnalyticsPageRoutingModule } from './analytics-routing.module';\r\n\r\nimport { AnalyticsPage } from './analytics.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AnalyticsPageRoutingModule\r\n  ],\r\n  declarations: [AnalyticsPage]\r\n})\r\nexport class AnalyticsPageModule {}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {DatabaseService} from '../../services/database.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-analytics',\r\n  templateUrl: './analytics.page.html',\r\n  styleUrls: ['./analytics.page.scss'],\r\n})\r\nexport class AnalyticsPage implements OnInit {\r\n  mostUsedPlan;\r\n  leastUsedPlan;\r\n\r\n  constructor(private dataService: DatabaseService,\r\n              private router: Router) {\r\n  }\r\n\r\n  getMostUsedTrainingsPlan() {\r\n    const map = new Map();\r\n    this.dataService.getUserTrainingsPlan().subscribe(result => {\r\n      result.forEach(resultItem => {\r\n        //Map mit ids und Nullen vorinitialisieren\r\n        map.set(resultItem.trainingPlanId, 0);\r\n      });\r\n      this.dataService.getAllSetLoggingByUid().subscribe(res => {\r\n        res.forEach(resItem => {\r\n          //Jede gefundene Id hochzaehlen\r\n          map.set(resItem.trainingPlanId, map.get(resItem.trainingPlanId) + 1);\r\n        });\r\n        //Max-Wert in der Map ermitteln\r\n        const maxValue = Math.max(...map.values());\r\n        for (const keyItem of map.keys()) {\r\n          if (map.get(keyItem) === maxValue) {\r\n            //Plan der dem Max-Wert in der Map hat setzen\r\n            this.dataService.getTrainingsPlanById(keyItem).subscribe(resultItem => {\r\n              this.mostUsedPlan = resultItem;\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  getLeastUsedTrainingsPlan() {\r\n    const map = new Map();\r\n    this.dataService.getUserTrainingsPlan().subscribe(result => {\r\n      result.forEach(resultItem => {\r\n        //Map mit ids und Nullen vorinitialisieren\r\n        map.set(resultItem.trainingPlanId, 0);\r\n      });\r\n      this.dataService.getAllSetLoggingByUid().subscribe(res => {\r\n        res.forEach(resItem => {\r\n          //Jede gefundene Id hochzaehlen\r\n          map.set(resItem.trainingPlanId, map.get(resItem.trainingPlanId) + 1);\r\n        });\r\n        //Min-Wert in der Map ermitteln\r\n        const minValue = Math.min(...map.values());\r\n        for (const keyItem of map.keys()) {\r\n          if (map.get(keyItem) === minValue) {\r\n            //Plan der dem Min-Wert in der Map hat setzen\r\n            this.dataService.getTrainingsPlanById(keyItem).subscribe(resultItem => {\r\n              this.leastUsedPlan = resultItem;\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMostUsedTrainingsPlan();\r\n    this.getLeastUsedTrainingsPlan();\r\n  }\r\n\r\n  async redirect(trainingPlanId: string) {\r\n   await this.router.navigateByUrl(`/training-plan/${trainingPlanId}`, {replaceUrl: true});\r\n  }\r\n}\r\n","import {Injectable, Query} from '@angular/core';\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  collectionData,\r\n  deleteDoc,\r\n  doc,\r\n  docData,\r\n  Firestore,\r\n  updateDoc,\r\n  where,\r\n  query, collectionGroup\r\n} from '@angular/fire/firestore';\r\nimport {Observable} from 'rxjs';\r\nimport {traceUntilFirst} from '@angular/fire/performance';\r\nimport {AuthenticationService} from './authentication.service';\r\n\r\nenum SearchTypes {\r\n  exercise = '/exercise',\r\n  exercisesList = '',\r\n  bodyPart = '/bodyPart',\r\n  bodyPartList = '/bodyPartList',\r\n  exerciseByID = '/exercise',\r\n  targetMuscle = '/target',\r\n  targetMuscleList = '/targetList',\r\n  equipment = '/equipment',\r\n  equipmentList = '/equipmentList'\r\n}\r\n\r\nexport interface UserData {\r\n  docId?: string;\r\n  uid: string;\r\n  firstname: string;\r\n  surname: string;\r\n  birthdate: string;\r\n  size: number;\r\n  email: string;\r\n}\r\n\r\nexport interface Excersise {\r\n  exerciseId?: string;\r\n  name: string;\r\n  bodypart: string;\r\n  equipment: string;\r\n  gifUrl: string;\r\n  target: string;\r\n}\r\n\r\nexport interface SetLogging {\r\n  id?: string;\r\n  excerciseId: string;\r\n  trainingPlanId: string;\r\n  uid: string;\r\n  date: string;\r\n  time: string;\r\n  sets: Array<any>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DatabaseService {\r\n\r\n  constructor(private firestore: Firestore,\r\n              private authService: AuthenticationService) {\r\n  }\r\n\r\n  getUserData(): Observable<UserData[]> {\r\n    const userRef = collection(this.firestore, 'userData');\r\n    return collectionData(userRef, {idField: 'userId'}) as Observable<UserData []>;\r\n  }\r\n\r\n  getUserDataById(id: string): Observable<UserData> {\r\n    const userDocRef = doc(this.firestore, `userData/${id}`);\r\n    return docData(userDocRef, {idField: 'userId'}) as Observable<UserData>;\r\n  }\r\n\r\n  getUserDataByUid(uid: string): Observable<UserData[]> {\r\n    const userRef = collection(this.firestore, 'userData');\r\n    const userQuery = query(userRef, where('uid', '==', uid));\r\n    return collectionData(userQuery, {idField: 'userId'}) as Observable<UserData []>;\r\n  }\r\n\r\n  addUser(user: UserData) {\r\n    const userRef = collection(this.firestore, 'userData');\r\n    return addDoc(userRef, user);\r\n  }\r\n\r\n  updateUser(user: UserData) {\r\n    const userDocRef = doc(this.firestore, `userData/${user.docId}`);\r\n    return updateDoc(userDocRef, {\r\n      firstname: user.firstname, surname: user.surname,\r\n      birthdate: user.birthdate, size: user.size, email: user.email\r\n    });\r\n  }\r\n\r\n  deleteUser(user: UserData) {\r\n    const userDocRef = doc(this.firestore, `userData/${user.docId}`);\r\n    return deleteDoc(userDocRef);\r\n  }\r\n\r\n  addTrainingPlan(plan: any) {\r\n    const trainingPlanRef = collection(this.firestore, 'trainingPlan');\r\n    return addDoc(trainingPlanRef, plan);\r\n  }\r\n\r\n  updateTrainingPlan(plan: any) {\r\n    const trainingPlanDocRef = doc(this.firestore, `trainingPlan/${plan.id}`);\r\n    return updateDoc(trainingPlanDocRef, plan);\r\n  }\r\n\r\n  deleteTrainingPlan(plan: any) {\r\n    const trainingPlanDocRef = doc(this.firestore, `trainingPlan/${plan.id}`);\r\n    return deleteDoc(trainingPlanDocRef);\r\n  }\r\n\r\n  getTrainingsPlan(): Observable<any[]> {\r\n    const trainingPlanRef = collection(this.firestore, 'trainingPlan');\r\n    return collectionData(trainingPlanRef, {idField: 'trainingPlanId'}) as Observable<any []>;\r\n  }\r\n\r\n  getTrainingsPlanById(id: string): Observable<any> {\r\n    const trainingPlanRef = doc(this.firestore, `trainingPlan/${id}`);\r\n    return docData(trainingPlanRef, {idField: 'trainingPlanId'}) as Observable<any>;\r\n  }\r\n\r\n  getUserTrainingsPlan() {\r\n    const trainingPlanRef = collection(this.firestore, 'trainingPlan');\r\n    const trainQuery = query(trainingPlanRef, where('uid', '==', this.authService.getUserId()));\r\n    return collectionData(trainQuery, {idField: 'trainingPlanId'});\r\n  }\r\n\r\n  addExercise(exercise: Excersise) {\r\n    const exerciseRef = collection(this.firestore, 'exercises');\r\n    return addDoc(exerciseRef, exercise);\r\n  }\r\n\r\n  getAllExercises(): Observable<Excersise[]> {\r\n    const exerciseRef = collection(this.firestore, 'exercises');\r\n    return collectionData(exerciseRef, {idField: 'exerciseId'}) as Observable<Excersise[]>;\r\n  }\r\n\r\n  getExercisesBySearch(type, target?): Observable<Excersise[]> {\r\n    console.log('Hello');\r\n    console.log(type);\r\n    console.log(SearchTypes.bodyPart);\r\n    const exerciseRef = collection(this.firestore, 'exercises');\r\n    if (type === 'exercisesList') {\r\n      console.log(SearchTypes.exercisesList);\r\n      return this.getAllExercises();\r\n    }\r\n    if (type === 'bodyPart') {\r\n      console.log('bodypart');\r\n      const exerciseQuary = query(exerciseRef, where('bodypart', '==', target));\r\n      return collectionData(exerciseQuary, {idField: 'exerciseId'}) as Observable<Excersise []>;\r\n    }\r\n    if (type === 'targetMuscle') {\r\n      console.log(SearchTypes.targetMuscle);\r\n      const exerciseQuary = query(exerciseRef, where('target', '==', target));\r\n      return collectionData(exerciseQuary, {idField: 'exerciseId'}) as Observable<Excersise []>;\r\n    }\r\n    if (type === 'equipment') {\r\n      console.log(SearchTypes.equipment);\r\n      const exerciseQuary = query(exerciseRef, where('equipment', '==', target));\r\n      return collectionData(exerciseQuary, {idField: 'exerciseId'}) as Observable<Excersise []>;\r\n    }\r\n  }\r\n\r\n  getExerciseById(id: string): Observable<Excersise> {\r\n    const exerciseRef = doc(this.firestore, `exercises/${id}`);\r\n    return docData(exerciseRef, {idField: 'exerciseId'}) as Observable<Excersise>;\r\n  }\r\n\r\n  getExerciseByNumericId(id: string) {\r\n    const exerciseRef = collection(this.firestore, 'exercises');\r\n    const exerciseQuary = query(exerciseRef, where('numericId', '==', id));\r\n    return collectionData(exerciseQuary, {idField: 'exerciseId'}) as Observable<Excersise []>;\r\n  }\r\n\r\n  updateExercise(exercise: Excersise) {\r\n    const exerciseDocRef = doc(this.firestore, `exercises/${exercise.exerciseId}`);\r\n    return updateDoc(exerciseDocRef, {\r\n      name: exercise.name, bodypart: exercise.bodypart,\r\n      equipment: exercise.equipment, gifUrl: exercise.gifUrl, target: exercise.target\r\n    });\r\n  }\r\n\r\n  deleteExercise(exercise: Excersise) {\r\n    const exerciseDocRef = doc(this.firestore, `exercises/${exercise.exerciseId}`);\r\n    return deleteDoc(exerciseDocRef);\r\n  }\r\n\r\n  getAllSetLoggingByUid(): Observable<SetLogging []> {\r\n    const setLoggingRef = collection(this.firestore, 'setLogging');\r\n    const setLogginQuery = query(setLoggingRef, where('uid', '==', this.authService.getUserId()));\r\n    return collectionData(setLogginQuery, {idField: 'setLoggingId'}) as Observable<SetLogging []>;\r\n  }\r\n\r\n  addSetLogging(setLogging: SetLogging) {\r\n    const setLoggingRef = collection(this.firestore, 'setLogging');\r\n    return addDoc(setLoggingRef, setLogging);\r\n  }\r\n\r\n  updateSetLogging(setLogging: SetLogging) {\r\n    const setLoggingDocRef = doc(this.firestore, `setLogging/${setLogging.id}`);\r\n    return updateDoc(setLoggingDocRef, {\r\n      exerciseId: setLogging.excerciseId, trainingPlanId: setLogging.trainingPlanId,\r\n      userId: setLogging.uid, date: setLogging.date, time: setLogging.time, sets: setLogging.sets,\r\n    });\r\n  }\r\n\r\n  deleteSetLogging(setLogging: SetLogging) {\r\n    const setLoggingDocRef = doc(this.firestore, `setLogging/${setLogging.id}`);\r\n    return deleteDoc(setLoggingDocRef);\r\n  }\r\n}\r\n"],"names":["Component","DatabaseService","Router","AnalyticsPage","constructor","dataService","router","getMostUsedTrainingsPlan","map","Map","getUserTrainingsPlan","subscribe","result","forEach","resultItem","set","trainingPlanId","getAllSetLoggingByUid","res","resItem","get","maxValue","Math","max","values","keyItem","keys","getTrainingsPlanById","mostUsedPlan","getLeastUsedTrainingsPlan","minValue","min","leastUsedPlan","ngOnInit","redirect","navigateByUrl","replaceUrl","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
